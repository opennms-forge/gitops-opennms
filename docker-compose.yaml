---
version: '3.8'

volumes:
  opennms-data:
  database-data:

services:
  database:
    image: postgres:15
    env_file: opennms-stack.env
    volumes:
      - database-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready" ,"-U", "postgres"]
      interval: 5s
      timeout: 3s
      retries: 1

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,BROKER:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_LISTENERS: 'INTERNAL://kafka:29092,CONTROLLER://kafka:29093,EXTERNAL://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka:29092,EXTERNAL://kafka:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CLUSTER_ID: 'rkKB84SG2NOYITcxMkSeFw=='
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      kafka:
        condition: service_started
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    ports:
      - "8080:8080/tcp"

  horizon-init:
    image: opennms/horizon:32.0.4
    depends_on:
      database:
        condition: service_healthy
      kafka:
        condition: service_started
    env_file: opennms-stack.env
    volumes:
      - ./core/opennms-overlay:/opt/opennms-overlay
    command: ["-i"]

  horizon:
    image: opennms/horizon:32.0.4
    depends_on:
      database:
        condition: service_healthy
      horizon-init:
        condition: service_completed_successfully
    env_file: opennms-stack.env
    volumes:
      - opennms-data:/opennms-data
      - ./core/opennms-overlay:/opt/opennms-overlay
    command: ["-f"]
    healthcheck:
      test: [ "CMD", "curl", "-f", "-I", "http://localhost:8980/opennms/login.jsp" ]
      interval: 1m
      timeout: 10s
      retries: 1
    ports:
      - "8101:8101/tcp"
      - "8980:8980/tcp"

  minion:
    image: opennms/minion:32.0.4
    depends_on:
      kafka:
        condition: service_started
    volumes:
      - ./minion/minion-config.yaml:/opt/minion/minion-config.yaml
    command: ["-f"]
    healthcheck:
      test: "/health.sh"
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      - "8201:8201/tcp"
      - "1162:1162/udp"
      - "1514:1514/udp"
